#El volumen odoo-web-data de el servicio app no se le puede assignar una direccion hay que dejarlo como esta en el docker-compose,
# Mientras que el volumen odoo-db-data de la db si se puede, en este caso lo he puesto en el disco_duro
# En el VIRTUAL_PORT, ahi que poner el puerto por defecto que tiene odoo
# En el proxy he puesto otros puertos, ya que la maquina donde estamos corriendo este docker.compose los puertos 80 y 443 estan ocupados
# para odoo11 hay que quitar el volumen de la app

version: '3'

services:
  app:
    image: odoo:11.0
    depends_on:
      - db
    ports:
      - "8070:8069"
    environment:
      - VIRTUAL_HOST=odoodattechs.robotizate.com
      - VIRTUAL_PORT=8069
      - MYSQL_HOST=db
    networks:
      - proxy-tier
      - default
  db:
    image: postgres:9.4
    environment:
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_USER=odoo
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /disco_duro/odoo-db-data:/var/lib/postgresql/data/pgdata
   
  proxy:
    build: ./proxy
    restart: always
    ports:
      - 8080:80
      - 4430:443
    environment:
      - LETSENCRYPT_HOST=odoodattechs.robotizate.com
      - LETSENCRYPT_EMAIL=andrescarlos88carpio@gmail.com
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier
  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-tier
    depends_on:
      - proxy

volumes:
  odoo-web-data:
  odoo-db-data:
  certs:
  vhost.d:
  html:

networks:
  proxy-tier:
